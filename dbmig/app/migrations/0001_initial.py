# Generated by Django 2.2.4 on 2019-09-30 07:43

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Couriermaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courmas_code', models.CharField(blank=True, max_length=50, null=True)),
                ('courmas_desc', models.CharField(blank=True, max_length=100, null=True)),
                ('courmas_slno', models.IntegerField(blank=True, null=True)),
                ('courmas_active', models.CharField(blank=True, max_length=1, null=True)),
                ('courmas_remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('courmas_makerid', models.IntegerField(blank=True, null=True)),
                ('courmas_maketime', models.DateTimeField(blank=True, null=True)),
                ('courmas_clntcode', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usercategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usrcat_code', models.CharField(blank=True, max_length=4, null=True)),
                ('usercat_desc', models.CharField(blank=True, max_length=20, null=True)),
                ('usercat_slno', models.IntegerField(blank=True, null=True)),
                ('usercat_remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('usercat_active', models.CharField(blank=True, max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Companywarehousemaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('com_wmasdesc', models.CharField(blank=True, max_length=50, null=True)),
                ('com_wmasname', models.CharField(blank=True, max_length=150, null=True)),
                ('com_wmasaddress', models.TextField(blank=True, null=True)),
                ('com_wmascity', models.CharField(blank=True, max_length=50, null=True)),
                ('com_wmaspincode', models.IntegerField(blank=True, null=True)),
                ('com_wmasphone', models.IntegerField(blank=True, null=True)),
                ('com_wmascommaspntr', models.IntegerField(blank=True, null=True)),
                ('com_wmascomzmaspntr', models.IntegerField(blank=True, null=True)),
                ('com_wmasslno', models.IntegerField(blank=True, null=True)),
                ('com_wmasremarks', models.CharField(blank=True, max_length=250, null=True)),
                ('com_wmasactive', models.CharField(blank=True, max_length=2, null=True)),
                ('com_wmas_accwmas', models.IntegerField(blank=True, null=True)),
                ('com_wmas_clntmaspntr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Couriermaster')),
            ],
        ),
        migrations.CreateModel(
            name='Userdetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('usrd_code', models.IntegerField(blank=True, null=True)),
                ('usrd_name', models.CharField(blank=True, max_length=10, null=True)),
                ('password', models.CharField(blank=True, db_column='usrd_pwrd', max_length=50, null=True)),
                ('usrd_slno', models.IntegerField(blank=True, null=True)),
                ('usrd_remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('usrd_active', models.CharField(blank=True, max_length=1, null=True)),
                ('usrd_makerid', models.IntegerField(blank=True, null=True)),
                ('usrd_maketime', models.DateTimeField(blank=True, null=True)),
                ('usrd_logcount', models.IntegerField(blank=True, null=True)),
                ('usrd_logattempt', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('usrd_assinedwhm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Companywarehousemaster')),
                ('usrd_usrcatpntr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Usercategory')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
